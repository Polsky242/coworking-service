plugins {
    id 'java'
    id 'war'
}

group = 'ru.polskiy'
version = '1.0-SNAPSHOT'

sourceCompatibility = '17'
targetCompatibility = '17'

repositories {
    mavenCentral()
}

ext {
    javaxVersion = '3.1.0'
    javaxAnnotationVersion = '1.3.2'
    springVersion = '5.3.32'
    springSecurityVersion = '5.7.5'
    lombokVersion = '1.18.30'
    pluginWarVersion = '3.3.1'
    pluginAspectjVersion = '1.14.0'
    jacksonVersion = '2.16.1'
    jjwtVersion = '0.12.5'
    springfoxVersion = '3.0.0'
    mapstructVersion = '1.5.5.Final'
    log4jVersion = '2.22.1'
    aspectjVersion = '1.9.21'
    junitJupiterVersion = '5.10.1'
    mockitoVersion = '5.10.0'
    testcontainersJUnitVersion = '1.19.1'
    postgresqlVersion = '42.7.2'
    liquibaseCoreVersion = '4.25.1'
    testcontainersVersion = '1.19.4'
    jsr310Version = '2.16.1'
}

dependencies {
    implementation "org.springframework:spring-core:${springVersion}"
    implementation "org.springframework:spring-context:${springVersion}"
    implementation "org.springframework:spring-webmvc:${springVersion}"
    implementation "org.springframework:spring-aop:${springVersion}"
    implementation "org.springframework:spring-aspects:${springVersion}"
    implementation "org.springframework:spring-tx:${springVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"
    providedCompile "javax.servlet:javax.servlet-api:${javaxVersion}"
    implementation "javax.annotation:javax.annotation-api:${javaxAnnotationVersion}"
    implementation "org.springframework.security:spring-security-core:${springSecurityVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jsr310Version}"
    implementation "org.springframework.security:spring-security-web:${springSecurityVersion}"
    implementation "org.springframework.security:spring-security-config:${springSecurityVersion}"
    testImplementation "org.springframework:spring-test:${springVersion}"
    implementation "io.springfox:springfox-swagger2:${springfoxVersion}"
    implementation "io.springfox:springfox-swagger-ui:${springfoxVersion}"
    implementation "io.springfox:springfox-oas:${springfoxVersion}"
    implementation "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation "org.aspectj:aspectjrt:${aspectjVersion}"
    implementation "org.aspectj:aspectjtools:${aspectjVersion}"
    implementation "io.jsonwebtoken:jjwt:${jjwtVersion}"
    implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    implementation "org.postgresql:postgresql:${postgresqlVersion}"
    implementation "org.liquibase:liquibase-core:${liquibaseCoreVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"  // Add this line
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter:${mockitoVersion}"
    testImplementation "org.testcontainers:junit-jupiter:${testcontainersJUnitVersion}"
    testImplementation "org.testcontainers:postgresql:${testcontainersVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.annotationProcessorPath = configurations.annotationProcessor
}

war {
    archiveVersion = ''
    archiveFileName = 'coworking-service.war'
}

configurations {
    providedCompile
}

test {
    useJUnitPlatform()
}
